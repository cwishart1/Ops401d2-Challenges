#! /usr/bin/env python3

# Script Name:                  Challenge33-malwareDetection
# Class Name:                   Ops 401
# Author Name:                  Cody Wishart
# Date of latest revision:      5/20/21
# Purpose:                      detect signature based malware

# Import Lib
import os, hashlib, time, datetime

# Functions
def timestamp():
    now = datetime.datetime.now()
    timestamp = now.strftime("%m-%d-%y %H:%M:%S:%f")
    return str(timestamp)

def findHash(datapath):
    md5_hash = hashlib.md5()
    with open(datapath,"rb") as f:
        for byte_block in iter(lambda: f.read(4096),b""):
            md5_hash.update(byte_block)
        print(md5_hash.hexdigest())
     
def init():
    filepath = input("Input absolute directory path:\n")
    for root, dirs, files in os.walk(filepath):
        for name in files:
            datapath = (os.path.join(root, name))
            time = timestamp()
            print(time)
            hash = findHash(datapath)
            apikey = os.getenv('API_KEY_VIRUSTOTAL') # Set your environment variable before proceeding
            query = 'python3 virustotal-search.py -k ' + apikey + ' -m ' + hash

# Main
os.system(query)
init()
